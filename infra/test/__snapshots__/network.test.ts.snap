// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NetworkStack Test Snapshot Test 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CloudWatchLogsEndpointF23EDC4F": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "CloudWatchLogsEndpointSecurityGroup3E72E04B",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".logs",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "VPCIsolatedSubnet1SubnetEBD00FC6",
          },
          {
            "Ref": "VPCIsolatedSubnet2Subnet4B1C8CAA",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "CloudWatchLogsEndpointSecurityGroup3E72E04B": {
      "Properties": {
        "GroupDescription": "NetworkTestStack/CloudWatchLogsEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "VPCB9E5F0B4",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "VPCB9E5F0B4",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DynamoDbEndpointBF7E74F2": {
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "VPCIsolatedSubnet1RouteTableEB156210",
          },
          {
            "Ref": "VPCIsolatedSubnet2RouteTable9B4F78DC",
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".dynamodb",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "EcrApiEndpointB01DFFD7": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "EcrApiEndpointSecurityGroupE2E875BD",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".ecr.api",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "VPCIsolatedSubnet1SubnetEBD00FC6",
          },
          {
            "Ref": "VPCIsolatedSubnet2Subnet4B1C8CAA",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "EcrApiEndpointSecurityGroupE2E875BD": {
      "Properties": {
        "GroupDescription": "NetworkTestStack/EcrApiEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "VPCB9E5F0B4",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "VPCB9E5F0B4",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EcrDockerEndpointE4437377": {
      "Properties": {
        "PrivateDnsEnabled": true,
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "EcrDockerEndpointSecurityGroup5A4BC357",
              "GroupId",
            ],
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".ecr.dkr",
            ],
          ],
        },
        "SubnetIds": [
          {
            "Ref": "VPCIsolatedSubnet1SubnetEBD00FC6",
          },
          {
            "Ref": "VPCIsolatedSubnet2Subnet4B1C8CAA",
          },
        ],
        "VpcEndpointType": "Interface",
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "EcrDockerEndpointSecurityGroup5A4BC357": {
      "Properties": {
        "GroupDescription": "NetworkTestStack/EcrDockerEndpoint/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "VPCB9E5F0B4",
                "CidrBlock",
              ],
            },
            "Description": {
              "Fn::Join": [
                "",
                [
                  "from ",
                  {
                    "Fn::GetAtt": [
                      "VPCB9E5F0B4",
                      "CidrBlock",
                    ],
                  },
                  ":443",
                ],
              ],
            },
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "S3EndpointD570F362": {
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "VPCIsolatedSubnet1RouteTableEB156210",
          },
          {
            "Ref": "VPCIsolatedSubnet2RouteTable9B4F78DC",
          },
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region",
              },
              ".s3",
            ],
          ],
        },
        "VpcEndpointType": "Gateway",
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCEndpoint",
    },
    "VPCB9E5F0B4": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "NetworkTestStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIsolatedSubnet1RouteTableAssociationA2D18F7C": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCIsolatedSubnet1RouteTableEB156210",
        },
        "SubnetId": {
          "Ref": "VPCIsolatedSubnet1SubnetEBD00FC6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCIsolatedSubnet1RouteTableEB156210": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "NetworkTestStack/VPC/IsolatedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCIsolatedSubnet1SubnetEBD00FC6": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "NetworkTestStack/VPC/IsolatedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCIsolatedSubnet2RouteTable9B4F78DC": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "NetworkTestStack/VPC/IsolatedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCIsolatedSubnet2RouteTableAssociation7BF8E0EB": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCIsolatedSubnet2RouteTable9B4F78DC",
        },
        "SubnetId": {
          "Ref": "VPCIsolatedSubnet2Subnet4B1C8CAA",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCIsolatedSubnet2Subnet4B1C8CAA": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "Name",
            "Value": "NetworkTestStack/VPC/IsolatedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
